     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit,scanf,printf,fopen,fread,fopen,fclose          ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import fopen msvcrt.dll  
    12                                  import fclose msvcrt.dll
    13                                  import fread msvcrt.dll
    14                                  segment data use32 class=data
    15 00000000 00000000                    nume_fisier dd 0
    16 00000004 257300                      format_citire_fisier db "%s",0
    17                                  
    18                                      
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                      
    24                                      ;scanf(nume,format)
    25 00000000 68[00000000]                push dword nume_fisier
    26 00000005 68[04000000]                push dword format_citire_fisier
    27 0000000A FF15[00000000]              call [scanf]
    28 00000010 83C408                      add esp,4*2
    29                                      
    30                                      ;printf(format,valoare)
    31 00000013 68[00000000]                push dword nume_fisier
    32 00000018 68[04000000]                push dword format_citire_fisier
    33 0000001D FF15[00000000]              call[printf]
    34 00000023 83C408                      add esp,4*2
    35                                  
    36 00000026 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 00000028 FF15[00000000]                  call    [exit]       ; call exit to terminate the progra
