     1                                  bits 32 
     2                                  
     3                                  global start        
     4                                  
     5                                  extern exit              
     6                                  import exit msvcrt.dll    
     7                                  
     8                                  segment data use32 class=data
     9 00000000 2B32326238365838            s1 db '+', '2', '2', 'b', '8', '6', 'X', '8'
    10                                      l1 equ $ - s1;
    11 00000008 613435                      s2 db 'a', '4', '5'
    12                                      l2 equ $ - s2;
    13 0000000B 00<rept>                    d times l1 + l2 db 0; va fi max dim s1 + s2 '5', '4', 'a', '2','b', '6', '8'
    14                                  
    15                                  
    16                                  segment code use32 class=code
    17                                      start:
    18                                          ;Se dau doua siruri de caractere S1 si S2. Sa se construiasca sirul D prin concatenarea elementelor sirului S2 in ordine inversa cu elementele de pe pozitiile pare din sirul S1.
    19                                          
    20 00000000 B903000000                      mov ecx, l2
    21 00000005 BE02000000                      mov esi, l2-1; esi ultima poz din s2
    22 0000000A BB00000000                      mov ebx, 0; ebx contor de poz in s1
    23                                          
    24 0000000F E310                            jecxz endloop1
    25                                          repeat1: ; scadem poz in s2 cu 1 si adaugam in d elem din s2
    26 00000011 8A86[08000000]                      mov al, [s2 + esi]
    27 00000017 8883[0B000000]                      mov [d + ebx], al
    28 0000001D 43                                  inc ebx
    29 0000001E 4E                                  dec esi
    30 0000001F E2F0                            loop repeat1       
    31                                          endloop1:
    32                                  
    33 00000021 B904000000                      mov ecx, l1/2; ecx = dim s1/2 pt ca avem nevoie doar de poz pare 
    34 00000026 BE01000000                      mov esi, 1; esi = 1 pt ca indexarea este de la 0
    35 0000002B E312                            jecxz endLoop2
    36                                          repeat2:; scadem poz in s1 cu 2 si adaugam in D 
    37                                          
    38 0000002D 8A86[00000000]                      mov al, [s1 + esi]
    39 00000033 8883[0B000000]                      mov [d + ebx], al
    40 00000039 83C602                              add esi, 2
    41 0000003C 43                                  inc ebx
    42 0000003D E2EE                            loop repeat2      
    43                                          endLoop2:
    44                                          
    45 0000003F 6A00                            push    dword 0     
    46 00000041 FF15[00000000]                  call    [exit]      
